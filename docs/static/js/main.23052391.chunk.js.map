{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Header","className","icon","faFan","LeftTitle","title","faCircle","generalDescription","GeneralDescription","Fragment","map","element","key","href","LeftColumn","education","ListOfEducation","year","degree","RightColumn","App","faUserAlt","faBriefcase","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2MAKMA,G,MAAS,WACX,OACI,yBAAKC,UAAU,UACX,4CACA,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAiBC,KAAMC,IAAOF,UAAU,gBAMlDG,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,OACI,yBAAKJ,UAAU,iBACX,kBAAC,IAAD,CAAiBC,KAAMI,IAAUL,UAAU,gBAC3C,6BAAMI,GACN,kBAAC,IAAD,CAAiBH,KAAMI,IAAUL,UAAU,kBAKjDM,EAAqB,CACvB,6BACA,4BACA,gBAGEC,EAAqB,WACvB,OACI,kBAAC,IAAMC,SAAP,KACKF,EAAmBG,KAAI,SAAAC,GACpB,OACI,kBAAC,IAAMF,SAAP,CAAgBG,IAAKD,GACjB,yBAAKV,UAAU,oBAAoBU,OAI/C,wCAAa,uBAAGV,UAAU,OAAOY,KAAK,iCAAzB,iBAKnBC,EAAa,WACf,OACI,yBAAKb,UAAU,eACX,kBAAC,EAAD,CAAWI,MAAM,YACjB,yBAAKJ,UAAU,qBACX,kBAAC,EAAD,OAKJ,kBAAC,EAAD,CAAWI,MAAM,cACjB,yBAAKJ,UAAU,qBACX,yBAAKA,UAAU,oBAAf,iEAOVc,EAAY,CACd,CAAC,OAAQ,qCACT,CAAC,OAAQ,6CACT,CAAC,OAAQ,4CAGPC,EAAkB,WACpB,OACI,wBAAIf,UAAU,kBACTc,EAAUL,KAAI,mCAAEO,EAAF,KAAQC,EAAR,YACX,wBAAIN,IAAKK,EAAMhB,UAAU,QAAQgB,EAAjC,KAAwC,0BAAMhB,UAAU,UAAUiB,SAM5EC,EAAc,WAChB,OACI,yBAAKlB,UAAU,gBACT,kBAAC,EAAD,CAAWI,MAAM,cACnB,yBAAKJ,UAAU,mBACX,uEACA,yBAAKA,UAAU,iBAAf,qBAEJ,kBAAC,EAAD,QAyFGmB,EApFH,WACR,OACI,yBAAKnB,UAAU,aACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACX,kBAAC,EAAD,MACA,kBAAC,EAAD,OAGJ,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAiBC,KAAMmB,IAAWpB,UAAU,iBAC5C,0CAGJ,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eAAf,wJAGA,yBAAKA,UAAU,eAAf,WACA,4BACI,sEACA,kEACA,2EAIJ,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAiBC,KAAMoB,IAAarB,UAAU,iBAC9C,oDAEJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YAAf,sCACA,yBAAKA,UAAU,iBAAf,mBAEJ,yBAAKA,UAAU,iBAAf,mBACA,yBAAKA,UAAU,eAAf,iFACA,yBAAKA,UAAU,eAAf,kDACA,4BACI,4HACA,wDACA,2DACA,4DACA,kEAIJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YAAf,wCACA,yBAAKA,UAAU,iBAAf,mBAEJ,yBAAKA,UAAU,iBAAf,mBACA,yBAAKA,UAAU,eAAf,kGAEA,yBAAKA,UAAU,eAAf,yDACA,4BACI,0EACA,8IAEA,iEACA,mEAIJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,YAAf,kCACA,yBAAKA,UAAU,iBAAf,+BAEJ,yBAAKA,UAAU,iBAAf,oBACA,yBAAKA,UAAU,eAAf,2GAEA,yBAAKA,UAAU,eAAf,6DACA,4BACI,wFACA,oEACA,0DACA,yDACA,iIC/JAsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.23052391.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFan, faCircle, faUserAlt, faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\nimport './App.css';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <div>KATE ASTRID</div>\n            <div className=\"icon\">\n                <FontAwesomeIcon icon={faFan} className=\"spinner\"/>\n            </div>\n        </div>\n    )\n}\n\nconst LeftTitle = ({ title }) => {\n    return (\n        <div className=\"section_title\">\n            <FontAwesomeIcon icon={faCircle} className=\"icon_circle\"/>\n            <div>{title}</div>\n            <FontAwesomeIcon icon={faCircle} className=\"icon_circle\"/>\n        </div>\n    )\n};\n\nconst generalDescription = [\n    'Amsterdam, The Netherlands',\n    'rational.astrid@gmail.com',\n    '+31620681510',\n]\n\nconst GeneralDescription = () => {\n    return (\n        <React.Fragment>\n            {generalDescription.map(element => {\n                return (\n                    <React.Fragment key={element}>\n                        <div className=\"line_description\">{element}</div>\n                    </React.Fragment>\n                )\n            })}\n            <div>GitHub: <a className=\"grey\" href=\"https://github.com/KateAstrid\">KateAstrid</a></div>\n        </React.Fragment>\n    )\n};\n\nconst LeftColumn = () => {\n    return (\n        <div className=\"left_column\">\n            <LeftTitle title=\"DETAILS\" />\n            <div className=\"parts_description\">\n                <GeneralDescription />\n            </div>\n\n          \n\n            <LeftTitle title=\"INTERESTS\" />\n            <div className=\"parts_description\">\n                <div className=\"line_description\">photography, art, quantum physics, math, cognitive science</div>\n            </div>\n\n        </div>\n    )\n};\n\nconst education = [\n    ['2010', 'Bachelor of Technical Translation'],\n    ['2011', 'Bachelor of Land Management and Cadastres'],\n    ['2013', 'Master of Land Management and Cadastres'],\n];\n\nconst ListOfEducation = () => {\n    return (\n        <ul className=\"education_list\">\n            {education.map(([year, degree]) => (\n                <li key={year} className=\"grey\">{year}, <span className='degree'>{degree}</span></li>\n            ))}\n        </ul>\n    )\n};\n\nconst RightColumn = () => {\n    return (\n        <div className=\"right_column\">\n              <LeftTitle title=\"EDUCATION\" />\n            <div className=\"education_title\">\n                <div>Voronezh State Agricultural University</div>\n                <div className=\"grey job_city\">Voronezh, Russia</div>\n            </div>\n            <ListOfEducation />\n        </div>\n    )\n};\n\nconst App = () => {\n    return (\n        <div className=\"container\">\n            <Header />\n            <div className=\"columns\">\n                <LeftColumn />\n                <RightColumn />\n            </div>\n\n            <div className=\"section_title\">\n                <FontAwesomeIcon icon={faUserAlt} className=\"icon_profile\"/>\n                <div>ABOUT ME</div>\n            </div>\n\n            <div className=\"main\">\n                <div className=\"description\">Self-taught, highly motivated individual dedicated to writing clear, concise, robust code that works. \n                    Striving to never stop learning and improving.\n                </div>\n                <div className=\"description\">My way:</div>\n                <ul>\n                    <li>four years in cartography and geodesy;</li>\n                    <li>five years in fashion photography;</li>\n                    <li>since 2018 - deep in software development.</li>\n                </ul>\n\n\n                <div className=\"section_title\">\n                    <FontAwesomeIcon icon={faBriefcase} className=\"icon_profile\"/>\n                    <div>EMPLOYMENT HISTORY</div>\n                </div>\n                <div className=\"job_title\">\n                    <div className=\"job_name\">Front end developer at \"Opora\" LLC</div>\n                    <div className=\"grey job_city\">Moscow, Russia</div> \n                </div>\n                <div className=\"grey job_date\">09.2018-12.2020</div>\n                <div className=\"description\">\"Opora\" LLC is a leader in producing and selling medical equipment in Russia.</div>\n                <div className=\"description\">Used technologies: PHP, YII, JavaScript, VueJs</div> \n                <ul>\n                    <li>Worked with the frontend of two company sites - one for legal entities, one for individuals;</li> \n                    <li>Helped with PHP backend.</li>\n                    <li>Converted all SASS to SCSS.</li>\n                    <li>Rewrote internal admin site.</li>\n                    <li>Rewrote big part of legacy code. </li> \n                </ul>\n\n\n                <div className=\"job_title\">\n                    <div className=\"job_name\">Front end developer at \"SmartAn\" LLC</div>\n                    <div className=\"grey job_city\">Moscow, Russia</div>\n                </div>\n                <div className=\"grey job_date\">12.2020-06.2021</div>\n                <div className=\"description\">\"SmartAn\" LLC is the first startup company in Russia that \n                    aggregates data for risk managers.  </div>\n                <div className=\"description\">Used technologies: TypeScript, ReactJs, Redux, NextJS</div> \n                <ul>\n                    <li>Was the only frontend developer in a team.</li>\n                    <li>Created a \n                    frontend for the platform from scratch right up to the platform's entry to the American accelerator.</li> \n                    <li>Implemented internationalization.</li>\n                    <li>Worked on the design of all pages.</li>\n                </ul>\n\n\n                <div className=\"job_title\">\n                    <div className=\"job_name\">Software developer at \"Otravo\"</div>\n                    <div className=\"grey job_city\">Amsterdam, the Netherlands</div>\n                </div>\n                <div className=\"grey job_date\">07.2021-till now</div>\n                <div className=\"description\">\"Otravo\" is a European travel organization. It owns a website\n                    that is an aggregator of travel packages.</div>\n                <div className=\"description\">Used technologies: TypeScript, ReactJs, NextJS, ClojureJs</div> \n                <ul>\n                    <li>Rewrote almost the whole front end from ClojureJs to TS.</li> \n                    <li>Modularized components using NextJs.</li>\n                    <li>Trained junior developers.</li>\n                    <li>Refactored a lot of code.</li>\n                    <li>Regularly communicated with backend developers to successfully launch \n                    new pages of the site. </li> \n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}